AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  ECS EC2


Resources:

##############################################
############### Flask Repository #############
##############################################
  FlaskRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub ${AWS::StackName}-flask
      ImageScanningConfiguration:
        ScanOnPush: true
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowPushPull
            Effect: Allow
            Principal:
              AWS: "*"
            Action: "*"
##############################################
############### Nginx Repository #############
##############################################
  NginxRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub ${AWS::StackName}-nginx
      ImageScanningConfiguration:
        ScanOnPush: true
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowPushPull
            Effect: Allow
            Principal:
              AWS: "*"
            Action: "*"
##############################################
############## EC2 Security Group ############
##############################################
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: basic Security group
      GroupDescription: Allows SSH and HTTP inbound traffic
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
##############################################
################ EC2 Instance ################
##############################################
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0eb260c4d5475b901
      InstanceType: t2.micro
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      KeyName: ecs-ec2-deploy-key
      IamInstanceProfile: !Ref InstanceProfile
      SecurityGroupIds:
        - !Ref SecurityGroup
      # Block device mapping
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 50
        - DeviceName: /dev/sdm
          Ebs:
            VolumeSize: 100
        # ephemeral drives
        - DeviceName: /dev/sdc
          VirtualName: ephemeral0
      Tags:
        - Key: Name
          Value: Fargate Instance
      UserData: !Base64
        'Fn::Sub': |
          #!/bin/bash -xe
          apt-get update
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT20M
    Metadata:
      AWS::CloudFormation::Init:
        config:
          groups:
            apache: { }
          packages:
            apt:
              git: []
              docker: []
              docker-compose: []
              unzip: []
              httpd: []
              awscli: []
              gnupg2 : []
              pass: []
          users:
            apache:
              groups:
                - "apache"
              uid: "111"
              homeDir: "/home/apache"
          files:
            /var/www/html/index.html:
              content: |
                <html>
                <body>
                <h1>Welcome to my CloudFormation-init configured instance!</h1>
                </body>
                </html>
              mode: '000644'
              owner: apache
              group: apache
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
              docker:
                enabled: true
                ensureRunning: true
##############################################
########### EC2 Instance Profile #############
##############################################
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref InstanceRole
##############################################
################ EC2 Role ################
##############################################
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - ecs-ec2-deploy.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AmazonVPCFullAccess
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess
        - arn:aws:iam::aws:policy/AmazonECS_FullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
        - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
############################################################################################
######################################## Out Put ###########################################
Outputs:
  InstanceIP:
    Value: !GetAtt EC2Instance.PublicIp
    Description: Instance public IP

